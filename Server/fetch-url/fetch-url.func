<cms:func 'fetch-url' url='' as_ajax='1' send_cookie='1' accept_cookie='1' ><cms:ignore>
   ---
   Requests content of any URL
   Example -

      <cms:call 'fetch-url' k_page_link />

   ---
   You should have downloaded this function from https://github.com/trendoman/Cms-Fu
   Donate and help keep functions updated!
   Support requests: tony.smirnov@gmail.com "Antony"
   </cms:ignore>
   <cms:php>
      global $CTX, $DB, $FUNCS;

      if( isset($_SERVER['HTTP_COUCHCMS_SELF_FETCH_ONCE']) ){ return; }
      if (! $myURL = filter_var( trim($CTX->get('url')), FILTER_VALIDATE_URL ) )
      {
         error_log( "ERROR in func 'fetch-url'. Invalid supplied URL: " . $CTX->get('url') );
         return( "ERROR in func 'fetch-url'. Invalid supplied URL: " . $CTX->get('url') );
      }

      $mycookie = '';
      $referer = '';
      $http_header = array();

      $send_cookie = $CTX->get('send_cookie', 1) == '0' ? 0 : 1;
      $accept_cookie = $CTX->get('accept_cookie', 1) == '0' ? 0 : 1;
      if( $CTX->get('as_ajax', 1) != '0' ) {
         $http_header[] = "X-Requested-With: XMLHttpRequest";
      }
      if( strpos($myURL, K_SITE_URL) )
      {
         /* Same-domain request - closing session, do not force commit */
         if( session_id() ) session_write_close();
         $DB->commit(0);

         if( $send_cookie )
         {
            foreach( $_COOKIE as $k=>$v ){
               if( is_array($k) === 0 ) $mycookie .= $k."=".$v."; ";
            }
         }
         /* Protect from self-looping */
         $http_header[] = "COUCHCMS_SELF_FETCH_ONCE: 1";
         $referer = $CTX->get('k_page_link');
      }

      $curlopts = $CTX->get('curl');

      $arr_cookies = array_filter( array_map( "trim", explode(";", $curlopts['cookies']) ), "strlen");
      $mycookie.= implode(";", $arr_cookies);
      $useragent = $curlopts['useragent'] ? trim($curlopts['useragent']) : "CouchCMS ".$CTX->get('k_cms_version');
      $referer = $curlopts['referer'] ? trim($curlopts['referer']) : $referer;

      if( extension_loaded('curl') ){

         $ch = curl_init();
         curl_setopt($ch, CURLOPT_URL, $myURL );
         curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
         curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0 );
         curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0 );
         curl_setopt($ch, CURLOPT_TIMEOUT, 20);
         curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1 );
         curl_setopt($ch, CURLOPT_AUTOREFERER, 1 );
         curl_setopt($ch, CURLOPT_MAXREDIRS, 3 );
         curl_setopt($ch, CURLOPT_REFERER, $referer);
         curl_setopt($ch, CURLOPT_USERAGENT, $useragent);
         curl_setopt($ch, CURLOPT_HTTPHEADER, $http_header);
         curl_setopt($ch, CURLOPT_COOKIE, $mycookie );

         if( $accept_cookie ){
             $cookie_file = $FUNCS->get_tmp_dir().'mycookies.txt';
             curl_setopt($ch, CURLOPT_COOKIESESSION, true);
             curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie_file);
         }

         $output = curl_exec($ch);
         $status = curl_getinfo($ch);
         curl_close($ch);

         $CTX->set('curl.status', $status, 'parent');
      } else {
         $opts = array();
         if( strpos($myURL, 'https')===0 ){
             $opts['ssl'] = array(
                 'verify_peer' => false,
                 'verify_host' => false,
                 'capture_peer_cert' => false,
             );
         }
         $opts['http']['header'] = implode("\r\n", $http_header) . "\r\nCookie: " . $mycookie;
         $context = stream_context_create( $opts );
         $output = @file_get_contents( $myURL, false, $context );
      }

      return $output;
    </cms:php>
</cms:func>
